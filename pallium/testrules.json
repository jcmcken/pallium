[
  "or", [
    "cpu_user<=1.5",
    "or", [
      "boottime>=10",
      "load_one==5"
    ]
  ]
]

[
  "or", [
    "a>=10",
    "b==2",
    "c<=2442",
  ]
]
    
ret = False
in_condition = False

def decide(op, stack):
    val = False
    if op == 'or':
        for i in stack:
            val = val or i
            if val: return True
    elif op == 'and':
        for i in stack:
            val = val and i
            if not val: return False # short circuit

def walk(tree, op=None):
    stack = []
    for i in tree:
        if op:
            treeans = walk(i, op=op)      
            op = None
        elif i in ['or', 'and']:
            op = i
        else:
            ans = evaluate(i)
            stack.append(ans)
    return decide(op, stack)
            
op: or 

def walk(tree):
    curop = None
    left = None
    right = None
    for i in tree:
        if isinstance(i, list):
            ret = walk(i)
        elif i in ['or', 'and']:
           curop = i
           continue
        else:
            ret = evaluate(i)

        if ret is True:
            return ret
